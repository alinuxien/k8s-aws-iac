---
- name: "Preparing Kubeconfigs temporary directory"
  ansible.builtin.file:
    path: /tmp/configs
    state: directory 

- name: "Creating Kubelet Kubeconfig for worker-0"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://${kubernetes-public-adress}:6443 \
            --kubeconfig=worker-0.kubeconfig; \
          kubectl config set-credentials system:node:worker-0 \
            --client-certificate=worker-0.pem \
            --client-key=worker-0-key.pem \
            --embed-certs=true \
            --kubeconfig=worker-0.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:node:worker-0 \
            --kubeconfig=worker-0.kubeconfig; \
          kubectl config use-context default --kubeconfig=worker-0.kubeconfig"

- name: "Creating Kubelet Kubeconfig for worker-1"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://${kubernetes-public-adress}:6443 \
            --kubeconfig=worker-1.kubeconfig; \
          kubectl config set-credentials system:node:worker-1 \
            --client-certificate=worker-1.pem \
            --client-key=worker-1-key.pem \
            --embed-certs=true \
            --kubeconfig=worker-1.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:node:worker-1 \
            --kubeconfig=worker-1.kubeconfig; \
          kubectl config use-context default --kubeconfig=worker-1.kubeconfig"

- name: "Copying Kubelet Kubeconfigs into temporary directory"
  ansible.builtin.copy:
    src: "{{ item }}" 
    dest: "/tmp/configs"
  with_items:
    - "worker-0.kubeconfig" 
    - "worker-1.kubeconfig" 

- name: "Creating Kube Proxy Kubeconfig"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://${kubernetes-public-adress}:6443 \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config set-credentials system:kube-proxy \
            --client-certificate=kube-proxy.pem \
            --client-key=kube-proxy-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-proxy \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig"

- name: "Copying Kube Proxy Kubeconfig into temporary directory"
  ansible.builtin.copy:
    src: "kube-proxy.kubeconfig" 
    dest: "/tmp/configs"

- name: "Creating Controller Manager Kubeconfig"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config set-credentials system:kube-controller-manager \
            --client-certificate=kube-controller-manager.pem \
            --client-key=kube-controller-manager-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-controller-manager \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig"

- name: "Copying Controller Manager Kubeconfig into temporary directory"
  ansible.builtin.copy:
    src: "kube-controller-manager.kubeconfig" 
    dest: "/tmp/configs"

- name: "Creating Scheduler Kubeconfig"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config set-credentials system:kube-scheduler \
            --client-certificate=kube-scheduler.pem \
            --client-key=kube-scheduler-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-scheduler \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig"

- name: "Copying Scheduler Kubeconfig into temporary directory"
  ansible.builtin.copy:
    src: "kube-scheduler.kubeconfig" 
    dest: "/tmp/configs"

- name: "Creating Admin User Kubeconfig"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=admin.kubeconfig; \
          kubectl config set-credentials admin \
            --client-certificate=admin.pem \
            --client-key=admin-key.pem \
            --embed-certs=true \
            --kubeconfig=admin.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=admin \
            --kubeconfig=admin.kubeconfig; \
          kubectl config use-context default --kubeconfig=admin.kubeconfig"

- name: "Copying Admin User Kubeconfig into temporary directory"
  ansible.builtin.copy:
    src: "admin.kubeconfig" 
    dest: "/tmp/configs"


