---
- name: "Preparation d'un dossier temporaire pour stocker les fichiers de Configuration générés"
  ansible.builtin.file:
    path: /tmp/configs
    state: directory 

- name: "Création du fichier de Configuration pour le Kubelet"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://${kubernetes-public-adress}:6443 \
            --kubeconfig=master-a.kubeconfigi; \
          kubectl config set-credentials system:node:master-a \
            --client-certificate=master-a.pem \
            --client-key=master-a-key.pem \
            --embed-certs=true \
            --kubeconfig=master-a.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:node:master-a \
            --kubeconfig=master-a.kubeconfig; \
          kubectl config use-context default --kubeconfig=master-a.kubeconfig"

- name: "Copie du fichier de Configuration dans un dossier temporaire"
  ansible.builtin.copy:
    src: "master-a.kubeconfig" 
    dest: "/tmp/configs"

- name: "Création du fichier de configuration pour le Kube-Proxy"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://${kubernetes-public-adress}:6443 \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config set-credentials system:kube-proxy \
            --client-certificate=kube-proxy.pem \
            --client-key=kube-proxy-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-proxy \
            --kubeconfig=kube-proxy.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig"

- name: "Copie du fichier de Configuration dans un dossier temporaire"
  ansible.builtin.copy:
    src: "kube-proxy.kubeconfig" 
    dest: "/tmp/configs"

- name: "Création du fichier de Configuration pour le Controller Manager"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config set-credentials system:kube-controller-manager \
            --client-certificate=kube-controller-manager.pem \
            --client-key=kube-controller-manager-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-controller-manager \
            --kubeconfig=kube-controller-manager.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig"

- name: "Copie du fichier de Configuration dans un dossier temporaire"
  ansible.builtin.copy:
    src: "kube-controller-manager.kubeconfig" 
    dest: "/tmp/configs"

- name: "Création du fichier de Configuration pour le Kube Scheduler"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config set-credentials system:kube-scheduler \
            --client-certificate=kube-scheduler.pem \
            --client-key=kube-scheduler-key.pem \
            --embed-certs=true \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=system:kube-scheduler \
            --kubeconfig=kube-scheduler.kubeconfig; \
          kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig"

- name: "Copie du fichier de Configuration dans un dossier temporaire"
  ansible.builtin.copy:
    src: "kube-scheduler.kubeconfig" 
    dest: "/tmp/configs"

- name: "Création du fichier de Configuration pour le User admin"
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
            --certificate-authority=ca.pem \
            --embed-certs=true \
            --server=https://127.0.0.1:6443 \
            --kubeconfig=admin.kubeconfig; \
          kubectl config set-credentials admin \
            --client-certificate=admin.pem \
            --client-key=admin-key.pem \
            --embed-certs=true \
            --kubeconfig=admin.kubeconfig; \
          kubectl config set-context default \
            --cluster=kubernetes-the-hard-way \
            --user=admin \
            --kubeconfig=admin.kubeconfig; \
          kubectl config use-context default --kubeconfig=admin.kubeconfig"

- name: "Copie du fichier de Configuration dans un dossier temporaire"
  ansible.builtin.copy:
    src: "admin.kubeconfig" 
    dest: "/tmp/configs"


