localhost ansible_user=vagrant ansible_password=vagrant ansible_become=yes ansible_connection=local ansible_python_interpreter="/usr/bin/env python"

[bastion]
${bastion-dns} ansible_host=${bastion-ip} ansible_ssh_user=${bastion-user} ansible_ssh_private_key_file=${private_key_file} # ${bastion-id}

[nodes_controller]
${controller-0-dns} ansible_host=${controller-0-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${k8s-nodes-user} # ${controller-0-id}
${controller-1-dns} ansible_host=${controller-1-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${k8s-nodes-user} # ${controller-1-id}

[nodes_worker]
${worker-0-dns} ansible_host=${worker-0-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${k8s-nodes-user} # ${worker-0-id}
${worker-1-dns} ansible_host=${worker-1-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${k8s-nodes-user} # ${worker-1-id}

[bastion:vars]
ansible_ssh_common_args= '-o StrictHostkeyChecking=no'

[nodes_controller:vars]
ansible_ssh_common_args= '-o ProxyCommand="ssh -i ${private_key_file} -W %h:%p ${bastion-user}@${bastion-ip} -o StrictHostKeyChecking=no" -o StrictHostKeyChecking=no'
ansible_user= ${k8s-nodes-user}
ansible_become= yes 

[nodes_worker:vars]
ansible_ssh_common_args= '-o ProxyCommand="ssh -i ${private_key_file} -W %h:%p ${bastion-user}@${bastion-ip} -o StrictHostKeyChecking=no" -o StrictHostKeyChecking=no'
ansible_user= ${k8s-nodes-user}
ansible_become= yes 


